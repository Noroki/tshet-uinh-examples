/* unt 切韻擬音
 *
 * 包含三版 unt 擬音：
 * - 2019：切韻朗讀音【過時】（https://zhuanlan.zhihu.com/p/58227457）
 * - 2020：切韻擬音 J（https://zhuanlan.zhihu.com/p/305516512 和 https://zhuanlan.zhihu.com/p/313005024）
 *   - 原版【過時】
 *   - 新版
 * - 2022：切韻擬音 L（暫無文章）
 *   - 音位形式
 *   - 音值形式
 * 基本模式僅「切韻擬音 J 新版」和「切韻擬音 L 音值形式」2 個子方案可用，專業模式全部 5 個子方案可用。
 *
 * 如需切換至專業模式，請將下面的「is專業模式 = false」改爲「is專業模式 = true」。
 * 
 * @author unt
 */

const is專業模式 = false;
if (!音韻地位) return is專業模式 ? [
  ['子方案', [5,
    '2019：切韻朗讀音',
    '2020：切韻擬音 J 原版', // 江œˤɴ 凡œm 陽ɨɐŋ/ʉɐŋ 侯ɘu 精三A合介音ɹ
    '2020：切韻擬音 J 新版', // 江oˤɴ 凡əm 陽ɨaŋ/ʉaŋ 侯u  精三A合介音ɥ
    '2022：切韻擬音 L 音位形式',
    '2022：切韻擬音 L', // 音值形式
  ]],
  // 選擇切韻朗讀音時，後低元音、二等元音記號、祭泰夬廢韻尾不適用
  ['知組', [1, 'ʈ', 'tɹ']],
  ['後低元音', [1, 'a', 'ɑ']],
  ['二等元音記號', [1, '咽化 ◌ˤ', 'r音鉤（帶空隙）◌˞ ', 'r音鉤（無空隙）◌˞', '下等號 ◌͇', '雙下橫線 ◌̳']], // 雙下橫線僅在下等號顯示不正常時使用
  ['祭泰夬廢韻尾', [2, 'j', 'ɹ']],
  ['聲調記號', [1, '上◌́ 去◌̀', '上ʔ 去h', '上ˀ 去ʰ', '五度符號', '五度符號（帶拖腔）']],
] : [
  ['子方案', [2,
    '2020：切韻擬音 J 新版',
    '2022：切韻擬音 L',
  ]],
  ['後低元音', [1, 'a', 'ɑ']],
  ['祭泰夬廢韻尾', [2, 'j', 'ɹ']],
  ['聲調記號', [1, '上◌́ 去◌̀', '上ˀ 去ʰ', '五度符號']],
];

const is = (...x) => 音韻地位.屬於(...x);
const when = (...x) => 音韻地位.判斷(...x);

function 調整選項() {
  if (選項.子方案.includes('朗讀音')) {
    選項.後低元音 = 'ɑ';
    選項.祭泰夬廢韻尾 = 'jɕ';
  }
}

function 調整音韻地位() {
  function 調整(表達式, 調整屬性) { if (is(表達式)) 音韻地位 = 音韻地位.調整(調整屬性); }
  調整('明母 尤韻', { 等: '一', 韻: '侯' }); // 實爲一等
  調整('云母 非 三等', { 母: '匣' }); // 云母非三等（現在廣韻資料中無）一律按匣母處理
}

function get聲母() {
  return when([
    [選項.知組 === 'tɹ' && '知組', { 知: 'tɹ', 徹: 'tɹʰ', 澄: 'dɹ', 孃: 'nɹ' }],
    ['云母 開口 非 (侵鹽韻 入聲)', { 云: '' }], // 煜曄兩小韻爲“合口”
    ['(鈍音 非 羣母 或 來母) 非 三等 或 匣母', {
      // 羣母一律按三等寫，匣母一律按非三等寫
      幫: 'ᵱ', 滂: 'ᵱʰ', 並: 'ᵬ', 明: 'ᵯ',
      見: 'q', 溪: 'qʰ', 疑: 'ɴ',
      影: 'ʡ', 曉: 'χ', 匣: 'ʁ',
      來: 'ɫ',
    }],
    ['', {
      幫: 'p', 滂: 'pʰ', 並: 'b', 明: 'm',
      端: 't', 透: 'tʰ', 定: 'd', 泥: 'n', 來: 'l',
      知: 'ʈ', 徹: 'ʈʰ', 澄: 'ɖ', 孃: 'ɳ',
      見: 'k', 溪: 'kʰ', 羣: 'ɡ', 疑: 'ŋ', 云: 'w',
      影: 'ʔ', 曉: 'x',
      精: 'ts', 清: 'tsʰ', 從: 'dz', 心: 's', 邪: 'z',
      莊: 'tʂ', 初: 'tʂʰ', 崇: 'dʐ', 生: 'ʂ', 俟: 'ʐ',
      章: 'tɕ', 昌: 'tɕʰ', 常: 'dʑ', 書: 'ɕ', 船: 'ʑ', 日: 'ɲ', 以: 'j',
    }]
  ])[音韻地位.母];
}

function get韻基() {
  const 分隔符 = /\||‖/;
  const 韻核列表 = {
    1: 'ɨ|ɨ‖ə|  |ə‖a |a',
    0: 'i|u‖e|eˤ|ə‖aˤ|a',
  };
  const 所有韻 = [
    { is三等: 1, 韻列表: '　|之　', 舒聲尾: 'ɨ' },
    { is三等: 1, 韻列表: '　|　尤', 舒聲尾: 'u' },
    { is三等: 1, 韻列表: '支|　　', 舒聲尾: 'e' },
    { is三等: 1, 韻列表: '　|魚虞', 舒聲尾: 'ə' }, // 後響二合元音的後半部分也按韻尾處理
    { is三等: 1, 韻列表: '　|　　‖　|　|　　‖麻|歌', 舒聲尾: '' },
    { is三等: 0, 韻列表: '　|　侯‖　|佳|　模‖麻|歌', 舒聲尾: '' },
    { is三等: 1, 韻列表: '　|蒸　‖　|　|　　‖庚清|', 舒聲尾: 'ŋ', 入聲尾: 'k' },
    { is三等: 0, 韻列表: '　|　　‖青|耕|登　‖庚|　', 舒聲尾: 'ŋ', 入聲尾: 'k' },
    { is三等: 1, 韻列表: '　|　東‖　|　|　鍾‖　|陽', 舒聲尾: 'ɴ', 入聲尾: 'q' },
    { is三等: 0, 韻列表: '　|　東‖　|江|　冬‖　|唐', 舒聲尾: 'ɴ', 入聲尾: 'q' },
    { is三等: 1, 韻列表: '脂|微　‖祭|　|廢　‖　|　', 舒聲尾: 'j' },
    { is三等: 0, 韻列表: '脂|　　‖齊|皆|咍灰‖夬|泰', 舒聲尾: 'j' },
    { is三等: 1, 韻列表: '眞|欣文‖仙|　|元　‖　|　', 舒聲尾: 'n', 入聲尾: 't' }, // 臻韻併入眞韻
    { is三等: 0, 韻列表: '眞|　　‖先|山|痕魂‖刪|寒', 舒聲尾: 'n', 入聲尾: 't' },
    { is三等: 1, 韻列表: '幽|　　‖宵|　|　　‖　|　', 舒聲尾: 'w' },
    { is三等: 0, 韻列表: '　|　　‖蕭|　|豪　‖肴|　', 舒聲尾: 'w' },
    { is三等: 1, 韻列表: '侵|　　‖鹽|　|嚴凡‖　|　', 舒聲尾: 'm', 入聲尾: 'p' },
    { is三等: 0, 韻列表: '　|　　‖添|咸|覃　‖銜|談', 舒聲尾: 'm', 入聲尾: 'p' },
  ];

  let 韻核;
  let 韻尾;
  const 韻 = 音韻地位.韻.replace('臻', '眞');
  let is三等 = 0 + is`三等`;
  if (is`端組 非 (麻韻 非 二等) 或 匣母`) is三等 = 0; // 爲了方便，爹小韻算三等
  所有韻.some(e => {
    if (e.is三等 === is三等 && e.韻列表.includes(韻)) {
      let i = e.韻列表.split(分隔符).findIndex(e => { return e.includes(韻); });
      韻核 = 韻核列表[is三等].replace(/ /g, '').split(分隔符)[i];
      韻尾 = is`舒聲` ? e.舒聲尾 : e.入聲尾;
      return true;
    }
  });
  if (is`祭泰夬廢韻 去聲`) 韻尾 = 選項.祭泰夬廢韻尾;
  return [韻核, 韻尾];
}

function get介音() {
  const A = 'j';
  const B = 'ɹ';
  const C = '';
  let 三等介音 = when([
    ['端組 麻韻 非 二等', A], // 爹小韻
    ['非 三等', ''],
    ['銳音', [ // 銳音包含以母
      ['精組', A],
      ['', ''],
    ]],

    ['重紐A類', A],
    ['重紐B類', B],
    ['云母 支脂祭眞臻仙宵麻庚清蒸幽侵鹽韻', B],
    ['庚韻', B],
    ['幽韻 幫組', B],
    ['蒸韻 非 開口', B],
    ['麻清幽韻', A],
    ['', C],
  ]);
  let 合口介音 = is`(合口 或 虞韻) 非 云母` ? 'w' : '';
  // 爲了更易通過音節首判斷類別，將三等介音前置
  return 三等介音 + 合口介音;
}

function get聲調() {
  if (選項.子方案.includes('朗讀音') && is`祭泰夬廢韻 去聲`) {
    if (選項.聲調記號.includes('ʰ') || 選項.聲調記號.includes('h')) return '';
  }
  if (!選項.聲調記號.includes('五度符號')) return is`平入聲` ? '' : 選項.聲調記號.split(' ')[+is`去聲`].slice(-1);

  const 五度符號列表 = 選項.子方案.includes('朗讀音') ? [
    '˦', '˦˦˥', '˥˩', '˥',
    '˨˩', '˨˨˧', '˧˩˨', '˨˩',
  ] : 選項.聲調記號.includes('帶拖腔') ? [
    '˦˦˨', '˦˥', '˦˩˨', '˦',
    '˨˨˩', '˨˦', '˨˩˨', '˨',
  ] : [
    '˦', '˦˥', '˦˩', '˦',
    '˨', '˨˦', '˨˩', '˨',
  ];
  return 五度符號列表[{
    平: is`全清 或 次清` ?
      1 : 5,
    上: is`非 全濁` ?
      2 : 6,
    去: is`全清 或 次清` ?
      3 : 7,
    入: is(選項.子方案.includes('朗讀音') ? '非 全濁' : '全清 或 次清') ?
      4 : 8,
  }[音韻地位.聲] - 1];
}

function 音位to音值(音節) {
  function 替換韻核(from, to) { if (音節.韻核 === from) 音節.韻核 = to; }
  const is展唇性韻尾 = [...'ɨŋk'].includes(音節.韻尾);
  const is圓唇性韻尾 = [...'uɴq'].includes(音節.韻尾);
  const is唇音性韻尾 = [...'wmp'].includes(音節.韻尾) || is圓唇性韻尾;
  const is非前元音性韻尾 = is展唇性韻尾 || is圓唇性韻尾 || 音節.韻尾 === 'ə';
  const is唇音性音節首 = 音節.介音.includes('w') || is`幫組` || 音節.聲母 === 'w';
  const is銳音性音節首 = !['', 'w'].includes(音節.介音) || is`銳音 三等`; // 非三等音節首不屬於銳音性

  // (1) 銳音性音節首將韻核同化爲前元音
  //     除非韻尾爲非前元音性，使韻核保持非前
  //     茝佁䑂 3 小韻也除外
  if (is銳音性音節首 && !is非前元音性韻尾 && !is`廢韻 非 去聲`) {
    替換韻核('ɨ', 'i');
    替換韻核('ə', 'e');
  }
  // (2) 後圓唇性韻尾將韻核同化爲後圓唇元音
  if (is圓唇性韻尾) {
    替換韻核('ɨ', 'u');
    替換韻核('eˤ', 'oˤ');
    替換韻核('ə', 'o');
  }
  // (3) 唇音性音節首所含的 w 介音覆蓋同部位韻核（三等 w → u，覆蓋 ɨ；非三等 w → o，覆蓋 ə）
  //     除非韻尾排斥唇音性（韻尾爲唇音性或明確的展唇性）
  if (is唇音性音節首 && !is展唇性韻尾 && !is唇音性韻尾) {
    if (is`三等`) {
      替換韻核('ɨ', 'u');
      音節.韻尾 = 音節.韻尾.replace('ə', 'o'); // 虞韻後半部分
    } else {
      替換韻核('ə', 'o');
      // 豪韻唇音可能也是獨立的，但爲了簡便不處理它
    }
  }
  // (4) 非三等開音節 ə、o 無對立，按 o 處理（模韻）
  // (5) 非三等第 2 條以外的唇音韻尾也使韻核略圓唇，記作後移（豪覃韻）
  if (!is`三等`) {
    if (!音節.韻尾) 替換韻核('ə', 'o');
    if (is唇音性韻尾) 替換韻核('ə', 'ʌ');
  }

  // 後處理：移除與韻核同部位介音、韻尾
  [
    ['i', 'j'],
    ['ɨ', 'ɨ'],
    ['u', 'u'],
    ['u', 'w'],
    ['o', 'w'], // 非三等 w
  ].forEach(e => {
    if (音節.韻核 === e[0]) {
      音節.介音 = 音節.介音.replace(e[1], '');
      音節.韻尾 = 音節.韻尾.replace(e[1], '');
    }
  });
  // 後處理：按需顯示 ɑ，包括𦣛小韻（銳音歌三合）
  if (!is銳音性音節首 || is圓唇性韻尾 || is`歌韻 三等 合口`) 替換韻核('a', 選項.後低元音);
}

function 聲母to舊版聲母(聲母, 塞擦音加連線 = false) {
  const froms = 'ᵱᵬᵯɫʡx';
  const tos = 'pbmlʔh';
  if (froms.includes(聲母[0])) 聲母 = tos[froms.indexOf(聲母[0])] + 聲母.slice(1);
  if (塞擦音加連線 && 聲母.replace('ʰ', '').length > 1) 聲母 = 聲母[0] + '͡' + 聲母.slice(1);
  return 聲母;
}

function 音值to切韻擬音J(音節, is原版) {
  音節.聲母 = 聲母to舊版聲母(音節.聲母);
  if (音節.介音.includes('w') || [...'uo'].includes(音節.韻核) && !is`東冬模尤侯韻 或 幫組 或 云母`) {
    音節.聲母 += 'ʷ';
    音節.聲母 = 音節.聲母.replace('ʰʷ', 'ʷʰ');
    音節.聲母 = 音節.聲母.replace('jʷ', 'ɥ');
  }

  音節.介音 = when([
    ['三等', [
      [is原版 && (音節.介音.includes('j') || 音節.韻核 === 'i') && '精組 合口', 'ɹ'],
      ['鈍音 非 云母', [
        // 增加三 C 介音
        [['', 'w'].includes(音節.介音) && 音節.韻核 !== 'i' && '非 蒸韻', [
          ['幫組', 'β'],
          [音節.介音 === 'w', 'ɥ̈'],
          ['', 'j̈'],
        ]]
      ]],
      ['精組 東尤韻', 'ɹ'],
      [is專業模式 && !選項.知組.includes('ɹ') && '知組', 'ɹ'],
      ['來母', 'ɹ'],
    ]],
    [is原版 && '侯韻 非 明母', 'ɘ'],
    [音節.介音 === 'jw', 'ɥ'],
    ['', 音節.介音.replace('w', '')],
  ], '', true);

  音節.韻核 = when([
    ['鍾韻', 'ʉɔ'],
    ['陽韻', (is`開口` ? 'ɨ' : 'ʉ') + (is原版 ? 'ɐ' : 音節.韻核)],
    ['清韻', 'iæ'],
    [is原版 && '江韻', 'œˤ'],
    [is原版 && '嚴凡韻 幫組', 'œ'],
    ['莊組 眞臻欣韻 開口', 'ɹ̩'],
    ['蒸韻', 'i'],
    ['三等 非 東尤韻', 音節.韻核.replace('u', 'ʉ')],
    ['', 音節.韻核],
  ]);

  音節.韻尾 = {
    微: 'i',
    幽: 'u',
    支: 'ɛ',
    魚: 'ʌ',
    虞: 'ɔ',
  }[音韻地位.韻] || 音節.韻尾;

  if (音節.韻核[0] === 'i' && (['j', 'ɥ'].includes(音節.介音) || is`知組 或 來母`)) 音節.介音 = '';
  if (['ɨ', 'ʉ'].includes(音節.韻核[0]) && (['j̈', 'ɥ̈'].includes(音節.介音) || is`銳音`)) 音節.介音 = '';
}

function 音值to切韻朗讀音(音節) {
  音節.聲母 = 聲母to舊版聲母(音節.聲母, true);

  hasW = 音節.介音.includes('w') || ['u', 'o'].includes(音節.韻核[0]);
  if (音節.聲母 === 'w') {
    hasW = true;
    音節.聲母 = '';
  }
  音節.介音 = when([
    ['二等 非 (端組 或 來母 庚韻)', is`知莊組` ? 'ɻ' + 音節.介音 : 音節.介音 + 'ɻ'],
    ['三等', [
      ['幽韻', is`幫組` ? 'j' : 'ɥ'],
      [[...'iea'].includes(音節.韻核[0]) || '蒸韻 或 重紐A類 或 重紐B類', [
        [音節.介音.includes('ɹ') || '知莊組 或 蒸韻 鈍音', hasW ? 'ɻɥ' : 'ɻj'], // B
        ['', hasW ? 'ɥ' : 'j'], // A
      ]],
      ['', is`幫組 或 尤韻` ? 'ɥ̈' : hasW ? 'ẅ' : 'j̈'], // C
    ]],
    [音節.韻核[0] === 'o' && '非 (冬模韻 或 幫組)', 'w'],
    ['侯韻 非 幫組', 'ɘ'],
    ['', 音節.介音],
  ]);

  音節.韻核 = when([
    ['三等', [
      ['蒸韻', 'i'],
      ['微韻', 'ɨ'],
      [音節.韻核 === 'e' || '支清韻', 'ɛ'],
      [音節.韻核 === 'o' || '虞韻', 'ɔ'],
      ['魚韻', 'ə'],
      ['陽韻', 'ɐ'],
      ['嚴凡韻 幫組', 'ɞ'],
      ['幽韻', 'ÿ'],
      ['莊組 眞臻欣韻 開口', 'i˞ '],
      ['', 音節.韻核],
    ]],
    [音節.韻核 === 'eˤ', 'æ'],
    [音節.韻核 === 'oˤ', 'æ'],
    [音節.韻核 === 'aˤ', 'a'],
    ['豪韻', 'ɑ'],
    ['覃韻 或 咍灰韻 開口', 'ɐ'],
    ['咍灰韻', 'ɔ̞'],
    [音節.韻核 === 'ə', 'ɘ'],
    ['', 音節.韻核],
  ]);

  音節.韻尾 = when([
    ['通江攝', is`舒聲` ? 'ŋʷ' : 'kʷ'],
    ['宕攝', is`舒聲` ? 'ŋ' : 'k'],
    ['梗攝', is`舒聲` ? 'ɲ' : 'c'],
    ['支魚虞幽韻', ''],
    ['', 音節.韻尾],
  ]);

  if (音節.聲母 === 'j' && ['j', 'ɥ'].includes(音節.介音)) 音節.聲母 = '';
  [['j', 'i'], ['j̈', 'ɨ']].forEach(e => {
    if (音節.韻核[0] === e[1] && (音節.聲母 || 音節.介音[0] === 'ɻ')) 音節.介音 = 音節.介音.replace(e[0], '');
  });
}

function get音節() {
  const 音節 = {
    聲母: get聲母(),
    介音: get介音(),
    聲調: get聲調(),
  };
  [音節.韻核, 音節.韻尾] = get韻基();

  if (!選項.子方案.includes('音位')) 音位to音值(音節);
  if (選項.子方案.includes('J')) 音值to切韻擬音J(音節, 選項.子方案.includes('原版'));
  if (選項.子方案.includes('朗讀音')) 音值to切韻朗讀音(音節);
  if (is專業模式) {
    二等元音記號 = 選項.二等元音記號.split('◌')[1];
    音節.韻核 = 音節.韻核.replace('ˤ', is`端組 或 來母 庚韻` && 二等元音記號 !== 'ˤ' ? '' : 二等元音記號);
    if (音節.韻核 === 'e' && !音節.韻尾) { // 箉
      音節.韻核 = 'a';
      音節.韻尾 = 'j';
    }
  }

  let 插入位置 = 音節.韻核.includes('ɹ̩') ? 2 : 1;
  音節.韻母 = 音節.介音 + 音節.韻核 + 音節.韻尾;
  音節.帶調韻母 = 選項.聲調記號.includes('◌') ?
    音節.介音 + 音節.韻核.slice(0, 插入位置) + 音節.聲調 + 音節.韻核.slice(插入位置) + 音節.韻尾 :
    音節.介音 + 音節.韻核 + 音節.韻尾 + 音節.聲調;
  return 音節;
}

調整選項();
調整音韻地位();
const 音節 = get音節();
return 音節.聲母 + 音節.帶調韻母;
